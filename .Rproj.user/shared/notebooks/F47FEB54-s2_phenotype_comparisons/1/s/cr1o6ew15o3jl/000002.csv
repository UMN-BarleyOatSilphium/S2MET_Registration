"0","```r

## Calculate BLUEs for all trials in the S2 MET (except FHB)

# First load the MET tidy data
load(file.path(pheno_dir, \"Final/Master Phenotypes/S2_MET_tidy.RData\"))

# Calculate BLUEs
S2_MET_BLUE <- S2.MET.tidy %>%
  split(.$trait) %>%
  map(function(tr) {
    
    # If the number of environments is one...
    if (length(unique(tr$environment)) == 1) {
      fit <- lm(value ~ -1 + line_name, data = tr)
      BLUEs <- coef(fit)
      
    } else {
      fit <- lmer(value ~ -1 + line_name + (1|environment) + (1|line_name:environment), data = tr)
      BLUEs <- fixef(fit)
      
    }
    
    # Return a data.frame with BLUEs
    data.frame(
      line_name = str_replace(names(BLUEs), \"line_name\", \"\"), 
      trait = unique(tr$trait),
      value = BLUEs,
      row.names = NULL
    )
    
  }) %>%
  
  bind_rows()

# Combine data
# Subset the BLUEs for the S2TP and add designator
s2tp_pheno <- S2_MET_BLUE %>% 
  filter(line_name %in% pedigree_s2tp$Line) %>% 
  select(trait, value) %>% 
  mutate(pop = \"S2TP\")

## Do the same for S2C1-Parents and S2C1R
s2c1_parents_pheno <- S2_MET_BLUE %>% 
  filter(line_name %in% s2c1_parents) %>% 
  select(trait, value) %>% 
  mutate(pop = \"C1-Parents\")

s2c1r_pheno <- S2_MET_BLUE %>% 
  filter(line_name %in% pedigree_s2c1r$Line) %>% 
  select(trait, value) %>% 
  mutate(pop = \"C1R-50\")

pheno <- bind_rows(s2tp_pheno, s2c1_parents_pheno, s2c1r_pheno) %>%
  arrange(trait) %>%
  mutate(pop = factor(pop, levels = c(\"S2TP\", \"C1-Parents\", \"C1R-50\")),
         # change some pesky trait
         trait = ifelse(trait == \"MaltBetaGlucan\", \"BetaGlucan\", trait) )


```"
